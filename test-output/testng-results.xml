<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-10T09:51:49 IST" name="Default suite" finished-at="2023-04-10T09:52:05 IST" duration-ms="16728">
    <groups>
    </groups>
    <test started-at="2023-04-10T09:51:49 IST" name="Default test" finished-at="2023-04-10T09:52:05 IST" duration-ms="16728">
      <class name="sel1.ExcelExample">
        <test-method is-config="true" signature="testSetup()[pri:0, instance:sel1.ExcelExample@28701274]" started-at="2023-04-10T09:51:49 IST" name="testSetup" finished-at="2023-04-10T09:51:53 IST" duration-ms="4252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method signature="verifyInvalidLogin(java.lang.String,java.lang.String)[pri:0, instance:sel1.ExcelExample@28701274]" started-at="2023-04-10T09:51:53 IST" name="verifyInvalidLogin" data-provider="inputData" finished-at="2023-04-10T09:51:56 IST" duration-ms="2581" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:98)
at sel1.ExcelExample.verifyInvalidLogin(ExcelExample.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
        <test-method signature="verifyInvalidLogin(java.lang.String,java.lang.String)[pri:0, instance:sel1.ExcelExample@28701274]" started-at="2023-04-10T09:51:56 IST" name="verifyInvalidLogin" data-provider="inputData" finished-at="2023-04-10T09:51:58 IST" duration-ms="1902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testpassword1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
        <test-method signature="verifyInvalidLogin(java.lang.String,java.lang.String)[pri:0, instance:sel1.ExcelExample@28701274]" started-at="2023-04-10T09:51:58 IST" name="verifyInvalidLogin" data-provider="inputData" finished-at="2023-04-10T09:52:00 IST" duration-ms="2025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testpassword2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
        <test-method signature="verifyInvalidLogin(java.lang.String,java.lang.String)[pri:0, instance:sel1.ExcelExample@28701274]" started-at="2023-04-10T09:52:00 IST" name="verifyInvalidLogin" data-provider="inputData" finished-at="2023-04-10T09:52:02 IST" duration-ms="1759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testpassword3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
        <test-method signature="verifyInvalidLogin(java.lang.String,java.lang.String)[pri:0, instance:sel1.ExcelExample@28701274]" started-at="2023-04-10T09:52:02 IST" name="verifyInvalidLogin" data-provider="inputData" finished-at="2023-04-10T09:52:03 IST" duration-ms="1742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testpassword4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
        <test-method signature="verifyInvalidLogin(java.lang.String,java.lang.String)[pri:0, instance:sel1.ExcelExample@28701274]" started-at="2023-04-10T09:52:03 IST" name="verifyInvalidLogin" data-provider="inputData" finished-at="2023-04-10T09:52:05 IST" duration-ms="2076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testpassword5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
      </class> <!-- sel1.ExcelExample -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
